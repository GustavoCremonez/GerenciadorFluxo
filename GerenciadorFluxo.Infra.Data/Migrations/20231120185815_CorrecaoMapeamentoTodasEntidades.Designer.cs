// <auto-generated />
using System;
using GerenciadorFluxo.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GerenciadorFluxo.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231120185815_CorrecaoMapeamentoTodasEntidades")]
    partial class CorrecaoMapeamentoTodasEntidades
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GerenciadorFluxo.Domain.Entities.Anotacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Descricao");

                    b.Property<int>("IdProcesso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("IdProcesso");

                    b.ToTable("Anotacoes");
                });

            modelBuilder.Entity("GerenciadorFluxo.Domain.Entities.Fluxo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Fluxos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Fluxo destinado para o controle dos processos de vendas",
                            Nome = "Fluxo de vendas"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Fluxo destinado para o controle dos processos de people",
                            Nome = "Fluxo de people"
                        });
                });

            modelBuilder.Entity("GerenciadorFluxo.Domain.Entities.Processo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdFluxo")
                        .HasColumnType("int");

                    b.Property<int?>("IdProcessoSuperior")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nome");

                    b.Property<byte>("TipoProcesso")
                        .HasColumnType("tinyint ")
                        .HasColumnName("TipoProcesso");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("IdFluxo");

                    b.ToTable("Processos");
                });

            modelBuilder.Entity("GerenciadorFluxo.Domain.Entities.Anotacao", b =>
                {
                    b.HasOne("GerenciadorFluxo.Domain.Entities.Processo", "Processo")
                        .WithMany("Anotacoes")
                        .HasForeignKey("IdProcesso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("IdProcesso");

                    b.Navigation("Processo");
                });

            modelBuilder.Entity("GerenciadorFluxo.Domain.Entities.Processo", b =>
                {
                    b.HasOne("GerenciadorFluxo.Domain.Entities.Fluxo", "Fluxo")
                        .WithMany("Processos")
                        .HasForeignKey("IdFluxo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("IdFluxo");

                    b.Navigation("Fluxo");
                });

            modelBuilder.Entity("GerenciadorFluxo.Domain.Entities.Fluxo", b =>
                {
                    b.Navigation("Processos");
                });

            modelBuilder.Entity("GerenciadorFluxo.Domain.Entities.Processo", b =>
                {
                    b.Navigation("Anotacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
